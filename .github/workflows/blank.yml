name: Demo to Delpoy OAS to Kong # Specify the name of the deployment

on:
  push:
    branches:
      - main  # Trigger the deployment when pushing to the main branch
#
jobs:
  OAS_To_KONG:
    runs-on: ubuntu-latest  # Use Ubuntu as the operating system for the job

    steps:
    - name: Checkout Code  # Checkout the code from the repository
      uses: actions/checkout@v2
#
    - name: Install Insomnia CLI  # Install Insomnia CLI for linting and generating Kong configuration
      run: |
        wget https://github.com/Kong/insomnia/releases/download/lib%403.14.0-beta.1/inso-linux-3.14.0-beta.1.tar.xz
        tar -xf inso-linux-3.14.0-beta.1.tar.xz
    # - name: Set up environment variables
    #   env:
    #     KONG_ADMIN_API: http://172.16.20.71:8001
        # KONG_ADMIN_TOKEN: ${{ secrets.KONG_ADMIN_TOKEN }}
        # WORKSPACE_NAME: example-workspace
        # TEAM_NAME: example-team
        # USER_NAME: example-user
        # USER_ROLE: example-role
      # run: |
      #   echo "KONG_ADMIN_API=${KONG_ADMIN_API}"
      #   echo "KONG_ADMIN_TOKEN=${KONG_ADMIN_TOKEN}"

    # - name: Create workspace
    #   run: curl -i -X POST http://172.16.20.71:8001/services -d name = aarzoo -d url=http://mockbin.org

    # - name: Installing NodeJs
    #   uses: actions/setup-node@v1
      
    - name: Installing inso
      run:  npm install -g insomnia
      
    - name: Test the Inso OpenApSpec
      run: ./inso run test spc_0d1e37
      
    - name: Lint OpenAPI Spec  # Lint the OpenAPI spec using Insomnia CLI
      run: ./inso lint spec spc_0d1e37
      
    - name: Generate kong.yaml  # Generate Kong configuration in declarative format
      run: ./inso generate config spc_0d1e37 --type declarative -o kong.yaml --kongVersion 3
      
    - name: install deck CLI  # Install deck CLI for syncing Kong configuration
      run: |
          curl -sL https://github.com/kong/deck/releases/download/v1.35.0/deck_1.35.0_linux_amd64.tar.gz -o deck.tar.gz
          tar -xf deck.tar.gz -C /tmp
          sudo cp /tmp/deck /usr/local/bin/

    - name: Deploy to Kong  # Sync the Kong configuration to Kong API Gateway
      # run: deck gateway sync --konnect-addr https://us.api.konghq.com --konnect-token kpat_eohTcrjXdtiRRmeU4fhFss1kPOUhYTdQxzNXuGMTMXMgQii7O --konnect-control-plane-name Kong_Gateway_Apiops kong.yaml
           # deck gateway sync --konnect-addr https://eu.api.konghq.com --konnect-token kpat_xxxxx --konnect-control-plane-name default plugin.yaml

      run: deck gateway sync --kong-addr https://172.16.20.71 --tls-skip-verify -s kong.yaml --workspace WorkspaceA
